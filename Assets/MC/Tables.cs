using UnityEngine;

namespace SE {
public static class Tables {
public readonly static Vector3[] CellOffsets = {
	new Vector3(0f,0f,0f), new Vector3(1f,0f,0f), new Vector3(1f,0f,1f), new Vector3(0f,0f,1f), 
	new Vector3(0f,1f,0f), new Vector3(1f,1f,0f), new Vector3(1f,1f,1f), new Vector3(0f,1f,1f) 
};	

public readonly static int[,] MCEdgeToEdgeOffset = {
	{1, 0, 1, 1}, // 0
	{1, 0, 1, 2}, // 1
	{1, 0, 0, 1}, // 2
	{0, 0, 1, 2}, // 3
	{1, 1, 1, 1}, // 4
	{1, 1, 1, 2}, // 5
	{1, 1, 0, 1}, // 6
	{0, 1, 1, 2}, // 7
	{0, 1, 1, 0}, // 8
	{1, 1, 1, 0}, // 9
	{1, 1, 0, 0}, // 10
	{0, 1, 0, 0}  // 11
};

public readonly static int[][] triTable = new int[][] {
	new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1},
	new int[] {8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1},
	new int[] {3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1},
	new int[] {4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1},
	new int[] {4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1},
	new int[] {9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1},
	new int[] {10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1},
	new int[] {5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1},
	new int[] {5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1},
	new int[] {8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1},
	new int[] {2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1},
	new int[] {2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1},
	new int[] {11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1},
	new int[] {5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1},
	new int[] {11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1},
	new int[] {11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1},
	new int[] {2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1},
	new int[] {6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1},
	new int[] {3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1},
	new int[] {6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1},
	new int[] {6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1},
	new int[] {8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1},
	new int[] {7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1},
	new int[] {3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1},
	new int[] {0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1},
	new int[] {9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1},
	new int[] {8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1},
	new int[] {5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1},
	new int[] {0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1},
	new int[] {6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1},
	new int[] {10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1},
	new int[] {1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1},
	new int[] {0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1},
	new int[] {3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1},
	new int[] {6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1},
	new int[] {9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1},
	new int[] {8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1},
	new int[] {3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1},
	new int[] {10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1},
	new int[] {10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1},
	new int[] {2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1},
	new int[] {7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1},
	new int[] {2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1},
	new int[] {1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1},
	new int[] {11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1},
	new int[] {8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1},
	new int[] {0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1},
	new int[] {7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1},
	new int[] {7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1},
	new int[] {10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1},
	new int[] {0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1},
	new int[] {7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1},
	new int[] {6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1},
	new int[] {4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1},
	new int[] {10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1},
	new int[] {8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1},
	new int[] {1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1},
	new int[] {10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1},
	new int[] {10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1},
	new int[] {9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1},
	new int[] {7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1},
	new int[] {3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1},
	new int[] {7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1},
	new int[] {3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1},
	new int[] {6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1},
	new int[] {9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1},
	new int[] {1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1},
	new int[] {4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1},
	new int[] {7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1},
	new int[] {6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1},
	new int[] {0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1},
	new int[] {6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1},
	new int[] {0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1},
	new int[] {11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1},
	new int[] {6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1},
	new int[] {5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1},
	new int[] {9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1},
	new int[] {1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1},
	new int[] {10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1},
	new int[] {0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1},
	new int[] {11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1},
	new int[] {9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1},
	new int[] {7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1},
	new int[] {2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1},
	new int[] {9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1},
	new int[] {9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1},
	new int[] {1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1},
	new int[] {0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1},
	new int[] {10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1},
	new int[] {2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1},
	new int[] {0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1},
	new int[] {0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1},
	new int[] {9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1},
	new int[] {5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1},
	new int[] {5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1},
	new int[] {8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1},
	new int[] {9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1},
	new int[] {1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1},
	new int[] {3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1},
	new int[] {4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1},
	new int[] {9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1},
	new int[] {11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1},
	new int[] {11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1},
	new int[] {2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1},
	new int[] {9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1},
	new int[] {3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1},
	new int[] {1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1},
	new int[] {4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1},
	new int[] {0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1},
	new int[] {9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1},
	new int[] {1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}
};

public readonly static int[] edgeTable = {
	0x0  , 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,
	0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,
	0x190, 0x99 , 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,
	0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,
	0x230, 0x339, 0x33 , 0x13a, 0x636, 0x73f, 0x435, 0x53c,
	0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,
	0x3a0, 0x2a9, 0x1a3, 0xaa , 0x7a6, 0x6af, 0x5a5, 0x4ac,
	0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,
	0x460, 0x569, 0x663, 0x76a, 0x66 , 0x16f, 0x265, 0x36c,
	0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,
	0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff , 0x3f5, 0x2fc,
	0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,
	0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55 , 0x15c,
	0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,
	0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc ,
	0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,
	0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,
	0xcc , 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,
	0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,
	0x15c, 0x55 , 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,
	0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,
	0x2fc, 0x3f5, 0xff , 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,
	0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,
	0x36c, 0x265, 0x16f, 0x66 , 0x76a, 0x663, 0x569, 0x460,
	0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,
	0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa , 0x1a3, 0x2a9, 0x3a0,
	0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,
	0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33 , 0x339, 0x230,
	0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,
	0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99 , 0x190,
	0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,
	0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0   
};

public static byte[][][] MCLodTable = new byte[][][] {
	new byte[][] { // lod 0 (0)
		new byte[] { 21, 20, 4, 5, 17, 16, 0, 1 },
		new byte[] { 20, 22, 6, 4, 16, 18, 2, 0 },
		new byte[] { 4, 6, 38, 36, 0, 2, 34, 32 },
		new byte[] { 5, 4, 36, 37, 1, 0, 32, 33 },
		new byte[] { 17, 16, 0, 1, 25, 24, 8, 9 },
		new byte[] { 16, 18, 2, 0, 24, 26, 10, 8 },
		new byte[] { 0, 2, 34, 32, 8, 10, 42, 40 },
		new byte[] { 1, 0, 32, 33, 9, 8, 40, 41 }
	}, 
	new byte[][] { // lod 1 (1)
		new byte[] { 0, 25, 25, 8, 16, 25, 25, 24 },
		new byte[] { 4, 21, 21, 0, 20, 21, 21, 16 },
		new byte[] { 32, 41, 41, 40, 0, 41, 41, 8 },
		new byte[] { 36, 37, 37, 32, 4, 37, 37, 0 },
		new byte[] { 16, 21, 0, 0, 16, 21, 25, 16 },
		new byte[] { 0, 37, 32, 32, 0, 37, 41, 0 },
		new byte[] { 4, 37, 37, 0, 4, 21, 21, 0 },
		new byte[] { 0, 41, 41, 8, 0, 25, 25, 8 },
		new byte[] { 0, 37, 41, 0, 0, 21, 25, 0 }
	}, 
	new byte[][] { // lod 2 (10)
		new byte[] { 0, 42, 42, 8, 32, 42, 42, 40 },
		new byte[] { 4, 38, 38, 0, 36, 38, 38, 32 },
		new byte[] { 16, 26, 26, 24, 0, 26, 26, 8 },
		new byte[] { 20, 22, 22, 16, 4, 22, 22, 0 },
		new byte[] { 32, 38, 0, 0, 32, 38, 42, 32 },
		new byte[] { 0, 22, 16, 16, 0, 22, 26, 0 },
		new byte[] { 4, 22, 22, 0, 4, 38, 38, 0 },
		new byte[] { 0, 26, 26, 8, 0, 42, 42, 8 },
		new byte[] { 0, 22, 26, 0, 0, 38, 42, 0 }
	}, 
	new byte[][] { // lod 3 (11)
	}, 
	new byte[][] { // lod 4 (100)
		new byte[] { 0, 38, 38, 2, 32, 38, 38, 34 },
		new byte[] { 1, 37, 37, 0, 33, 37, 37, 32 },
		new byte[] { 16, 22, 22, 18, 0, 22, 22, 2 },
		new byte[] { 17, 21, 21, 16, 1, 21, 21, 0 },
		new byte[] { 32, 37, 0, 0, 32, 37, 38, 32 },
		new byte[] { 0, 21, 16, 16, 0, 21, 22, 0 },
		new byte[] { 1, 21, 21, 0, 1, 37, 37, 0 },
		new byte[] { 0, 22, 22, 2, 0, 38, 38, 2 },
		new byte[] { 0, 21, 22, 0, 0, 37, 38, 0 }
	}, 
	new byte[][] { // lod 5 (101)
		new byte[] { 2, 0, 21, 22, 2, 0, 37, 38 },
		new byte[] { 18, 16, 21, 22, 2, 0, 0, 2 },
		new byte[] { 2, 0, 0, 2, 34, 32, 37, 38 },
		new byte[] { 8, 25, 21, 0, 8, 41, 37, 0 },
		new byte[] { 24, 25, 21, 16, 8, 8, 0, 0 },
		new byte[] { 8, 8, 0, 0, 40, 41, 37, 32 }
	}, 
	new byte[][] { // lod 6 (110)
		new byte[] { 8, 0, 22, 26, 8, 0, 38, 42 },
		new byte[] { 24, 16, 22, 26, 8, 0, 0, 8 },
		new byte[] { 8, 0, 0, 8, 40, 32, 38, 42 },
		new byte[] { 1, 21, 22, 0, 1, 37, 38, 0 },
		new byte[] { 17, 21, 22, 16, 1, 1, 0, 0 },
		new byte[] { 1, 1, 0, 0, 33, 37, 38, 32 }
	}, 
	new byte[][] { // lod 7 (111)
	}, 
	new byte[][] { // lod 8 (1000)
		new byte[] { 0, 41, 41, 1, 32, 41, 41, 33 },
		new byte[] { 2, 42, 42, 0, 34, 42, 42, 32 },
		new byte[] { 16, 25, 25, 17, 0, 25, 25, 1 },
		new byte[] { 18, 26, 26, 16, 2, 26, 26, 0 },
		new byte[] { 32, 42, 0, 0, 32, 42, 41, 32 },
		new byte[] { 0, 26, 16, 16, 0, 26, 25, 0 },
		new byte[] { 2, 26, 26, 0, 2, 42, 42, 0 },
		new byte[] { 0, 25, 25, 1, 0, 41, 41, 1 },
		new byte[] { 0, 26, 25, 0, 0, 42, 41, 0 }
	}, 
	new byte[][] { // lod 9 (1001)
		new byte[] { 2, 0, 41, 42, 2, 0, 25, 26 },
		new byte[] { 34, 32, 41, 42, 2, 0, 0, 2 },
		new byte[] { 2, 0, 0, 2, 18, 16, 25, 26 },
		new byte[] { 4, 37, 41, 0, 4, 21, 25, 0 },
		new byte[] { 36, 37, 41, 32, 4, 4, 0, 0 },
		new byte[] { 4, 4, 0, 0, 20, 21, 25, 16 }
	}, 
	new byte[][] { // lod 10 (1010)
		new byte[] { 1, 0, 26, 25, 1, 0, 42, 41 },
		new byte[] { 17, 16, 26, 25, 1, 0, 0, 1 },
		new byte[] { 1, 0, 0, 1, 33, 32, 42, 41 },
		new byte[] { 4, 22, 26, 0, 4, 38, 42, 0 },
		new byte[] { 20, 22, 26, 16, 4, 4, 0, 0 },
		new byte[] { 4, 4, 0, 0, 36, 38, 42, 32 }
	}, 
	new byte[][] { // lod 11 (1011)
	}, 
	new byte[][] { // lod 12 (1100)
	}, 
	new byte[][] { // lod 13 (1101)
	}, 
	new byte[][] { // lod 14 (1110)
	}, 
	new byte[][] { // lod 15 (1111)
	}, 
	new byte[][] { // lod 16 (10000)
		new byte[] { 0, 26, 26, 8, 2, 26, 26, 10 },
		new byte[] { 4, 22, 22, 0, 6, 22, 22, 2 },
		new byte[] { 1, 25, 25, 9, 0, 25, 25, 8 },
		new byte[] { 5, 21, 21, 1, 4, 21, 21, 0 },
		new byte[] { 2, 22, 0, 0, 2, 22, 26, 2 },
		new byte[] { 0, 21, 1, 1, 0, 21, 25, 0 },
		new byte[] { 4, 21, 21, 0, 4, 22, 22, 0 },
		new byte[] { 0, 25, 25, 8, 0, 26, 26, 8 },
		new byte[] { 0, 21, 25, 0, 0, 22, 26, 0 }
	}, 
	new byte[][] { // lod 17 (10001)
		new byte[] { 2, 0, 25, 26, 2, 0, 21, 22 },
		new byte[] { 10, 8, 25, 26, 2, 0, 0, 2 },
		new byte[] { 2, 0, 0, 2, 6, 4, 21, 22 },
		new byte[] { 32, 41, 25, 0, 32, 37, 21, 0 },
		new byte[] { 40, 41, 25, 8, 32, 32, 0, 0 },
		new byte[] { 32, 32, 0, 0, 36, 37, 21, 4 }
	}, 
	new byte[][] { // lod 18 (10010)
		new byte[] { 32, 0, 26, 42, 32, 0, 22, 38 },
		new byte[] { 40, 8, 26, 42, 32, 0, 0, 32 },
		new byte[] { 32, 0, 0, 32, 36, 4, 22, 38 },
		new byte[] { 1, 25, 26, 0, 1, 21, 22, 0 },
		new byte[] { 9, 25, 26, 8, 1, 1, 0, 0 },
		new byte[] { 1, 1, 0, 0, 5, 21, 22, 4 }
	}, 
	new byte[][] { // lod 19 (10011)
	}, 
	new byte[][] { // lod 20 (10100)
		new byte[] { 8, 0, 21, 25, 8, 0, 22, 26 },
		new byte[] { 9, 1, 21, 25, 8, 0, 0, 8 },
		new byte[] { 8, 0, 0, 8, 10, 2, 22, 26 },
		new byte[] { 32, 37, 21, 0, 32, 38, 22, 0 },
		new byte[] { 33, 37, 21, 1, 32, 32, 0, 0 },
		new byte[] { 32, 32, 0, 0, 34, 38, 22, 2 }
	}, 
	new byte[][] { // lod 21 (10101)
		new byte[] { 34, 32, 0, 2, 38, 37, 21, 22 },
		new byte[] { 10, 8, 25, 26, 2, 0, 21, 22 },
		new byte[] { 40, 41, 25, 8, 32, 37, 21, 0 }
	}, 
	new byte[][] { // lod 22 (10110)
		new byte[] { 33, 1, 0, 32, 37, 21, 22, 38 },
		new byte[] { 40, 8, 26, 42, 32, 0, 22, 38 },
		new byte[] { 9, 25, 26, 8, 1, 21, 22, 0 }
	}, 
	new byte[][] { // lod 23 (10111)
	}, 
	new byte[][] { // lod 24 (11000)
		new byte[] { 32, 0, 25, 41, 32, 0, 26, 42 },
		new byte[] { 33, 1, 25, 41, 32, 0, 0, 32 },
		new byte[] { 32, 0, 0, 32, 34, 2, 26, 42 },
		new byte[] { 4, 21, 25, 0, 4, 22, 26, 0 },
		new byte[] { 5, 21, 25, 1, 4, 4, 0, 0 },
		new byte[] { 4, 4, 0, 0, 6, 22, 26, 2 }
	}, 
	new byte[][] { // lod 25 (11001)
		new byte[] { 6, 4, 0, 2, 22, 21, 25, 26 },
		new byte[] { 34, 32, 41, 42, 2, 0, 25, 26 },
		new byte[] { 36, 37, 41, 32, 4, 21, 25, 0 }
	}, 
	new byte[][] { // lod 26 (11010)
		new byte[] { 36, 4, 0, 32, 38, 22, 26, 42 },
		new byte[] { 33, 1, 25, 41, 32, 0, 26, 42 },
		new byte[] { 5, 21, 25, 1, 4, 22, 26, 0 }
	}, 
	new byte[][] { // lod 27 (11011)
	}, 
	new byte[][] { // lod 28 (11100)
	}, 
	new byte[][] { // lod 29 (11101)
	}, 
	new byte[][] { // lod 30 (11110)
	}, 
	new byte[][] { // lod 31 (11111)
	}, 
	new byte[][] { // lod 32 (100000)
		new byte[] { 0, 41, 41, 8, 1, 41, 41, 9 },
		new byte[] { 4, 37, 37, 0, 5, 37, 37, 1 },
		new byte[] { 2, 42, 42, 10, 0, 42, 42, 8 },
		new byte[] { 6, 38, 38, 2, 4, 38, 38, 0 },
		new byte[] { 1, 37, 0, 0, 1, 37, 41, 1 },
		new byte[] { 0, 38, 2, 2, 0, 38, 42, 0 },
		new byte[] { 4, 38, 38, 0, 4, 37, 37, 0 },
		new byte[] { 0, 42, 42, 8, 0, 41, 41, 8 },
		new byte[] { 0, 38, 42, 0, 0, 37, 41, 0 }
	}, 
	new byte[][] { // lod 33 (100001)
		new byte[] { 16, 0, 41, 25, 16, 0, 37, 21 },
		new byte[] { 24, 8, 41, 25, 16, 0, 0, 16 },
		new byte[] { 16, 0, 0, 16, 20, 4, 37, 21 },
		new byte[] { 2, 42, 41, 0, 2, 38, 37, 0 },
		new byte[] { 10, 42, 41, 8, 2, 2, 0, 0 },
		new byte[] { 2, 2, 0, 0, 6, 38, 37, 4 }
	}, 
	new byte[][] { // lod 34 (100010)
		new byte[] { 1, 0, 42, 41, 1, 0, 38, 37 },
		new byte[] { 9, 8, 42, 41, 1, 0, 0, 1 },
		new byte[] { 1, 0, 0, 1, 5, 4, 38, 37 },
		new byte[] { 16, 26, 42, 0, 16, 22, 38, 0 },
		new byte[] { 24, 26, 42, 8, 16, 16, 0, 0 },
		new byte[] { 16, 16, 0, 0, 20, 22, 38, 4 }
	}, 
	new byte[][] { // lod 35 (100011)
	}, 
	new byte[][] { // lod 36 (100100)
		new byte[] { 8, 0, 38, 42, 8, 0, 37, 41 },
		new byte[] { 10, 2, 38, 42, 8, 0, 0, 8 },
		new byte[] { 8, 0, 0, 8, 9, 1, 37, 41 },
		new byte[] { 16, 22, 38, 0, 16, 21, 37, 0 },
		new byte[] { 18, 22, 38, 2, 16, 16, 0, 0 },
		new byte[] { 16, 16, 0, 0, 17, 21, 37, 1 }
	}, 
	new byte[][] { // lod 37 (100101)
		new byte[] { 18, 2, 0, 16, 22, 38, 37, 21 },
		new byte[] { 24, 8, 41, 25, 16, 0, 37, 21 },
		new byte[] { 10, 42, 41, 8, 2, 38, 37, 0 }
	}, 
	new byte[][] { // lod 38 (100110)
		new byte[] { 17, 16, 0, 1, 21, 22, 38, 37 },
		new byte[] { 9, 8, 42, 41, 1, 0, 38, 37 },
		new byte[] { 24, 26, 42, 8, 16, 22, 38, 0 }
	}, 
	new byte[][] { // lod 39 (100111)
	}, 
	new byte[][] { // lod 40 (101000)
		new byte[] { 16, 0, 42, 26, 16, 0, 41, 25 },
		new byte[] { 18, 2, 42, 26, 16, 0, 0, 16 },
		new byte[] { 16, 0, 0, 16, 17, 1, 41, 25 },
		new byte[] { 4, 38, 42, 0, 4, 37, 41, 0 },
		new byte[] { 6, 38, 42, 2, 4, 4, 0, 0 },
		new byte[] { 4, 4, 0, 0, 5, 37, 41, 1 }
	}, 
	new byte[][] { // lod 41 (101001)
		new byte[] { 20, 4, 0, 16, 21, 37, 41, 25 },
		new byte[] { 18, 2, 42, 26, 16, 0, 41, 25 },
		new byte[] { 6, 38, 42, 2, 4, 37, 41, 0 }
	}, 
	new byte[][] { // lod 42 (101010)
		new byte[] { 5, 4, 0, 1, 37, 38, 42, 41 },
		new byte[] { 17, 16, 26, 25, 1, 0, 42, 41 },
		new byte[] { 20, 22, 26, 16, 4, 38, 42, 0 }
	}, 
	new byte[][] { // lod 43 (101011)
	}, 
	new byte[][] { // lod 44 (101100)
	}, 
	new byte[][] { // lod 45 (101101)
	}, 
	new byte[][] { // lod 46 (101110)
	}, 
	new byte[][] { // lod 47 (101111)
	}, 
	new byte[][] { // lod 48 (110000)
	}, 
	new byte[][] { // lod 49 (110001)
	}, 
	new byte[][] { // lod 50 (110010)
	}, 
	new byte[][] { // lod 51 (110011)
	}, 
	new byte[][] { // lod 52 (110100)
	}, 
	new byte[][] { // lod 53 (110101)
	}, 
	new byte[][] { // lod 54 (110110)
	}, 
	new byte[][] { // lod 55 (110111)
	}, 
	new byte[][] { // lod 56 (111000)
	}, 
	new byte[][] { // lod 57 (111001)
	}, 
	new byte[][] { // lod 58 (111010)
	}, 
	new byte[][] { // lod 59 (111011)
	}, 
	new byte[][] { // lod 60 (111100)
	}, 
	new byte[][] { // lod 61 (111101)
	}, 
	new byte[][] { // lod 62 (111110)
	}, 
	new byte[][] { // lod 63 (111111)
	}
};

// dim0:lod  |  dim1:edge#
// result: array of vertices of the edge (length: 2)
public static byte[][][] MCLodUniqueEdges = new byte[][][] {
	new byte[][] { // lod 0 (0)
		new byte[] { 21, 20 }, new byte[] { 20, 4 }, new byte[] { 4, 5 }, new byte[] { 5, 21 }, 
		new byte[] { 17, 16 }, new byte[] { 16, 0 }, new byte[] { 0, 1 }, new byte[] { 1, 17 }, 
		new byte[] { 21, 17 }, new byte[] { 20, 16 }, new byte[] { 4, 0 }, new byte[] { 5, 1 }, 
		new byte[] { 20, 22 }, new byte[] { 22, 6 }, new byte[] { 6, 4 }, new byte[] { 16, 18 }, 
		new byte[] { 18, 2 }, new byte[] { 2, 0 }, new byte[] { 22, 18 }, new byte[] { 6, 2 }, 
		new byte[] { 6, 38 }, new byte[] { 38, 36 }, new byte[] { 36, 4 }, new byte[] { 2, 34 }, 
		new byte[] { 34, 32 }, new byte[] { 32, 0 }, new byte[] { 38, 34 }, new byte[] { 36, 32 }, 
		new byte[] { 36, 37 }, new byte[] { 37, 5 }, new byte[] { 32, 33 }, new byte[] { 33, 1 }, 
		new byte[] { 37, 33 }, new byte[] { 25, 24 }, new byte[] { 24, 8 }, new byte[] { 8, 9 }, 
		new byte[] { 9, 25 }, new byte[] { 17, 25 }, new byte[] { 16, 24 }, new byte[] { 0, 8 }, 
		new byte[] { 1, 9 }, new byte[] { 24, 26 }, new byte[] { 26, 10 }, new byte[] { 10, 8 }, 
		new byte[] { 18, 26 }, new byte[] { 2, 10 }, new byte[] { 10, 42 }, new byte[] { 42, 40 }, 
		new byte[] { 40, 8 }, new byte[] { 34, 42 }, new byte[] { 32, 40 }, new byte[] { 40, 41 }, 
		new byte[] { 41, 9 }, new byte[] { 33, 41 }
	}, 
	new byte[][] { // lod 1 (1)
		new byte[] { 0, 25 }, new byte[] { 25, 25 }, new byte[] { 25, 8 }, new byte[] { 8, 0 }, 
		new byte[] { 16, 25 }, new byte[] { 25, 24 }, new byte[] { 24, 16 }, new byte[] { 0, 16 }, 
		new byte[] { 8, 24 }, new byte[] { 4, 21 }, new byte[] { 21, 21 }, new byte[] { 21, 0 }, 
		new byte[] { 0, 4 }, new byte[] { 20, 21 }, new byte[] { 21, 16 }, new byte[] { 16, 20 }, 
		new byte[] { 4, 20 }, new byte[] { 32, 41 }, new byte[] { 41, 41 }, new byte[] { 41, 40 }, 
		new byte[] { 40, 32 }, new byte[] { 0, 41 }, new byte[] { 41, 8 }, new byte[] { 32, 0 }, 
		new byte[] { 40, 8 }, new byte[] { 36, 37 }, new byte[] { 37, 37 }, new byte[] { 37, 32 }, 
		new byte[] { 32, 36 }, new byte[] { 4, 37 }, new byte[] { 37, 0 }, new byte[] { 36, 4 }, 
		new byte[] { 0, 0 }, new byte[] { 21, 25 }, new byte[] { 16, 16 }, new byte[] { 32, 32 }, 
		new byte[] { 37, 41 }, new byte[] { 4, 4 }, new byte[] { 37, 21 }, new byte[] { 41, 25 }, 
		new byte[] { 8, 8 }
	}, 
	new byte[][] { // lod 2 (10)
		new byte[] { 0, 42 }, new byte[] { 42, 42 }, new byte[] { 42, 8 }, new byte[] { 8, 0 }, 
		new byte[] { 32, 42 }, new byte[] { 42, 40 }, new byte[] { 40, 32 }, new byte[] { 0, 32 }, 
		new byte[] { 8, 40 }, new byte[] { 4, 38 }, new byte[] { 38, 38 }, new byte[] { 38, 0 }, 
		new byte[] { 0, 4 }, new byte[] { 36, 38 }, new byte[] { 38, 32 }, new byte[] { 32, 36 }, 
		new byte[] { 4, 36 }, new byte[] { 16, 26 }, new byte[] { 26, 26 }, new byte[] { 26, 24 }, 
		new byte[] { 24, 16 }, new byte[] { 0, 26 }, new byte[] { 26, 8 }, new byte[] { 16, 0 }, 
		new byte[] { 24, 8 }, new byte[] { 20, 22 }, new byte[] { 22, 22 }, new byte[] { 22, 16 }, 
		new byte[] { 16, 20 }, new byte[] { 4, 22 }, new byte[] { 22, 0 }, new byte[] { 20, 4 }, 
		new byte[] { 0, 0 }, new byte[] { 38, 42 }, new byte[] { 32, 32 }, new byte[] { 16, 16 }, 
		new byte[] { 22, 26 }, new byte[] { 4, 4 }, new byte[] { 22, 38 }, new byte[] { 26, 42 }, 
		new byte[] { 8, 8 }
	}, 
	new byte[][] { // lod 3 (11)
	}, 
	new byte[][] { // lod 4 (100)
		new byte[] { 0, 38 }, new byte[] { 38, 38 }, new byte[] { 38, 2 }, new byte[] { 2, 0 }, 
		new byte[] { 32, 38 }, new byte[] { 38, 34 }, new byte[] { 34, 32 }, new byte[] { 0, 32 }, 
		new byte[] { 2, 34 }, new byte[] { 1, 37 }, new byte[] { 37, 37 }, new byte[] { 37, 0 }, 
		new byte[] { 0, 1 }, new byte[] { 33, 37 }, new byte[] { 37, 32 }, new byte[] { 32, 33 }, 
		new byte[] { 1, 33 }, new byte[] { 16, 22 }, new byte[] { 22, 22 }, new byte[] { 22, 18 }, 
		new byte[] { 18, 16 }, new byte[] { 0, 22 }, new byte[] { 22, 2 }, new byte[] { 16, 0 }, 
		new byte[] { 18, 2 }, new byte[] { 17, 21 }, new byte[] { 21, 21 }, new byte[] { 21, 16 }, 
		new byte[] { 16, 17 }, new byte[] { 1, 21 }, new byte[] { 21, 0 }, new byte[] { 17, 1 }, 
		new byte[] { 0, 0 }, new byte[] { 37, 38 }, new byte[] { 32, 32 }, new byte[] { 16, 16 }, 
		new byte[] { 21, 22 }, new byte[] { 1, 1 }, new byte[] { 21, 37 }, new byte[] { 22, 38 }, 
		new byte[] { 2, 2 }
	}, 
	new byte[][] { // lod 5 (101)
		new byte[] { 2, 0 }, new byte[] { 0, 21 }, new byte[] { 21, 22 }, new byte[] { 22, 2 }, 
		new byte[] { 0, 37 }, new byte[] { 37, 38 }, new byte[] { 38, 2 }, new byte[] { 2, 2 }, 
		new byte[] { 0, 0 }, new byte[] { 21, 37 }, new byte[] { 22, 38 }, new byte[] { 18, 16 }, 
		new byte[] { 16, 21 }, new byte[] { 22, 18 }, new byte[] { 18, 2 }, new byte[] { 16, 0 }, 
		new byte[] { 34, 32 }, new byte[] { 32, 37 }, new byte[] { 38, 34 }, new byte[] { 2, 34 }, 
		new byte[] { 0, 32 }, new byte[] { 8, 25 }, new byte[] { 25, 21 }, new byte[] { 0, 8 }, 
		new byte[] { 8, 41 }, new byte[] { 41, 37 }, new byte[] { 8, 8 }, new byte[] { 25, 41 }, 
		new byte[] { 24, 25 }, new byte[] { 16, 24 }, new byte[] { 24, 8 }, new byte[] { 40, 41 }, 
		new byte[] { 32, 40 }, new byte[] { 8, 40 }
	}, 
	new byte[][] { // lod 6 (110)
		new byte[] { 8, 0 }, new byte[] { 0, 22 }, new byte[] { 22, 26 }, new byte[] { 26, 8 }, 
		new byte[] { 0, 38 }, new byte[] { 38, 42 }, new byte[] { 42, 8 }, new byte[] { 8, 8 }, 
		new byte[] { 0, 0 }, new byte[] { 22, 38 }, new byte[] { 26, 42 }, new byte[] { 24, 16 }, 
		new byte[] { 16, 22 }, new byte[] { 26, 24 }, new byte[] { 24, 8 }, new byte[] { 16, 0 }, 
		new byte[] { 40, 32 }, new byte[] { 32, 38 }, new byte[] { 42, 40 }, new byte[] { 8, 40 }, 
		new byte[] { 0, 32 }, new byte[] { 1, 21 }, new byte[] { 21, 22 }, new byte[] { 0, 1 }, 
		new byte[] { 1, 37 }, new byte[] { 37, 38 }, new byte[] { 1, 1 }, new byte[] { 21, 37 }, 
		new byte[] { 17, 21 }, new byte[] { 16, 17 }, new byte[] { 17, 1 }, new byte[] { 33, 37 }, 
		new byte[] { 32, 33 }, new byte[] { 1, 33 }
	}, 
	new byte[][] { // lod 7 (111)
	}, 
	new byte[][] { // lod 8 (1000)
		new byte[] { 0, 41 }, new byte[] { 41, 41 }, new byte[] { 41, 1 }, new byte[] { 1, 0 }, 
		new byte[] { 32, 41 }, new byte[] { 41, 33 }, new byte[] { 33, 32 }, new byte[] { 0, 32 }, 
		new byte[] { 1, 33 }, new byte[] { 2, 42 }, new byte[] { 42, 42 }, new byte[] { 42, 0 }, 
		new byte[] { 0, 2 }, new byte[] { 34, 42 }, new byte[] { 42, 32 }, new byte[] { 32, 34 }, 
		new byte[] { 2, 34 }, new byte[] { 16, 25 }, new byte[] { 25, 25 }, new byte[] { 25, 17 }, 
		new byte[] { 17, 16 }, new byte[] { 0, 25 }, new byte[] { 25, 1 }, new byte[] { 16, 0 }, 
		new byte[] { 17, 1 }, new byte[] { 18, 26 }, new byte[] { 26, 26 }, new byte[] { 26, 16 }, 
		new byte[] { 16, 18 }, new byte[] { 2, 26 }, new byte[] { 26, 0 }, new byte[] { 18, 2 }, 
		new byte[] { 0, 0 }, new byte[] { 42, 41 }, new byte[] { 32, 32 }, new byte[] { 16, 16 }, 
		new byte[] { 26, 25 }, new byte[] { 2, 2 }, new byte[] { 26, 42 }, new byte[] { 25, 41 }, 
		new byte[] { 1, 1 }
	}, 
	new byte[][] { // lod 9 (1001)
		new byte[] { 2, 0 }, new byte[] { 0, 41 }, new byte[] { 41, 42 }, new byte[] { 42, 2 }, 
		new byte[] { 0, 25 }, new byte[] { 25, 26 }, new byte[] { 26, 2 }, new byte[] { 2, 2 }, 
		new byte[] { 0, 0 }, new byte[] { 41, 25 }, new byte[] { 42, 26 }, new byte[] { 34, 32 }, 
		new byte[] { 32, 41 }, new byte[] { 42, 34 }, new byte[] { 34, 2 }, new byte[] { 32, 0 }, 
		new byte[] { 18, 16 }, new byte[] { 16, 25 }, new byte[] { 26, 18 }, new byte[] { 2, 18 }, 
		new byte[] { 0, 16 }, new byte[] { 4, 37 }, new byte[] { 37, 41 }, new byte[] { 0, 4 }, 
		new byte[] { 4, 21 }, new byte[] { 21, 25 }, new byte[] { 4, 4 }, new byte[] { 37, 21 }, 
		new byte[] { 36, 37 }, new byte[] { 32, 36 }, new byte[] { 36, 4 }, new byte[] { 20, 21 }, 
		new byte[] { 16, 20 }, new byte[] { 4, 20 }
	}, 
	new byte[][] { // lod 10 (1010)
		new byte[] { 1, 0 }, new byte[] { 0, 26 }, new byte[] { 26, 25 }, new byte[] { 25, 1 }, 
		new byte[] { 0, 42 }, new byte[] { 42, 41 }, new byte[] { 41, 1 }, new byte[] { 1, 1 }, 
		new byte[] { 0, 0 }, new byte[] { 26, 42 }, new byte[] { 25, 41 }, new byte[] { 17, 16 }, 
		new byte[] { 16, 26 }, new byte[] { 25, 17 }, new byte[] { 17, 1 }, new byte[] { 16, 0 }, 
		new byte[] { 33, 32 }, new byte[] { 32, 42 }, new byte[] { 41, 33 }, new byte[] { 1, 33 }, 
		new byte[] { 0, 32 }, new byte[] { 4, 22 }, new byte[] { 22, 26 }, new byte[] { 0, 4 }, 
		new byte[] { 4, 38 }, new byte[] { 38, 42 }, new byte[] { 4, 4 }, new byte[] { 22, 38 }, 
		new byte[] { 20, 22 }, new byte[] { 16, 20 }, new byte[] { 20, 4 }, new byte[] { 36, 38 }, 
		new byte[] { 32, 36 }, new byte[] { 4, 36 }
	}, 
	new byte[][] { // lod 11 (1011)
	}, 
	new byte[][] { // lod 12 (1100)
	}, 
	new byte[][] { // lod 13 (1101)
	}, 
	new byte[][] { // lod 14 (1110)
	}, 
	new byte[][] { // lod 15 (1111)
	}, 
	new byte[][] { // lod 16 (10000)
		new byte[] { 0, 26 }, new byte[] { 26, 26 }, new byte[] { 26, 8 }, new byte[] { 8, 0 }, 
		new byte[] { 2, 26 }, new byte[] { 26, 10 }, new byte[] { 10, 2 }, new byte[] { 0, 2 }, 
		new byte[] { 8, 10 }, new byte[] { 4, 22 }, new byte[] { 22, 22 }, new byte[] { 22, 0 }, 
		new byte[] { 0, 4 }, new byte[] { 6, 22 }, new byte[] { 22, 2 }, new byte[] { 2, 6 }, 
		new byte[] { 4, 6 }, new byte[] { 1, 25 }, new byte[] { 25, 25 }, new byte[] { 25, 9 }, 
		new byte[] { 9, 1 }, new byte[] { 0, 25 }, new byte[] { 25, 8 }, new byte[] { 1, 0 }, 
		new byte[] { 9, 8 }, new byte[] { 5, 21 }, new byte[] { 21, 21 }, new byte[] { 21, 1 }, 
		new byte[] { 1, 5 }, new byte[] { 4, 21 }, new byte[] { 21, 0 }, new byte[] { 5, 4 }, 
		new byte[] { 0, 0 }, new byte[] { 22, 26 }, new byte[] { 2, 2 }, new byte[] { 1, 1 }, 
		new byte[] { 21, 25 }, new byte[] { 4, 4 }, new byte[] { 21, 22 }, new byte[] { 25, 26 }, 
		new byte[] { 8, 8 }
	}, 
	new byte[][] { // lod 17 (10001)
		new byte[] { 2, 0 }, new byte[] { 0, 25 }, new byte[] { 25, 26 }, new byte[] { 26, 2 }, 
		new byte[] { 0, 21 }, new byte[] { 21, 22 }, new byte[] { 22, 2 }, new byte[] { 2, 2 }, 
		new byte[] { 0, 0 }, new byte[] { 25, 21 }, new byte[] { 26, 22 }, new byte[] { 10, 8 }, 
		new byte[] { 8, 25 }, new byte[] { 26, 10 }, new byte[] { 10, 2 }, new byte[] { 8, 0 }, 
		new byte[] { 6, 4 }, new byte[] { 4, 21 }, new byte[] { 22, 6 }, new byte[] { 2, 6 }, 
		new byte[] { 0, 4 }, new byte[] { 32, 41 }, new byte[] { 41, 25 }, new byte[] { 0, 32 }, 
		new byte[] { 32, 37 }, new byte[] { 37, 21 }, new byte[] { 32, 32 }, new byte[] { 41, 37 }, 
		new byte[] { 40, 41 }, new byte[] { 8, 40 }, new byte[] { 40, 32 }, new byte[] { 36, 37 }, 
		new byte[] { 4, 36 }, new byte[] { 32, 36 }
	}, 
	new byte[][] { // lod 18 (10010)
		new byte[] { 32, 0 }, new byte[] { 0, 26 }, new byte[] { 26, 42 }, new byte[] { 42, 32 }, 
		new byte[] { 0, 22 }, new byte[] { 22, 38 }, new byte[] { 38, 32 }, new byte[] { 32, 32 }, 
		new byte[] { 0, 0 }, new byte[] { 26, 22 }, new byte[] { 42, 38 }, new byte[] { 40, 8 }, 
		new byte[] { 8, 26 }, new byte[] { 42, 40 }, new byte[] { 40, 32 }, new byte[] { 8, 0 }, 
		new byte[] { 36, 4 }, new byte[] { 4, 22 }, new byte[] { 38, 36 }, new byte[] { 32, 36 }, 
		new byte[] { 0, 4 }, new byte[] { 1, 25 }, new byte[] { 25, 26 }, new byte[] { 0, 1 }, 
		new byte[] { 1, 21 }, new byte[] { 21, 22 }, new byte[] { 1, 1 }, new byte[] { 25, 21 }, 
		new byte[] { 9, 25 }, new byte[] { 8, 9 }, new byte[] { 9, 1 }, new byte[] { 5, 21 }, 
		new byte[] { 4, 5 }, new byte[] { 1, 5 }
	}, 
	new byte[][] { // lod 19 (10011)
	}, 
	new byte[][] { // lod 20 (10100)
		new byte[] { 8, 0 }, new byte[] { 0, 21 }, new byte[] { 21, 25 }, new byte[] { 25, 8 }, 
		new byte[] { 0, 22 }, new byte[] { 22, 26 }, new byte[] { 26, 8 }, new byte[] { 8, 8 }, 
		new byte[] { 0, 0 }, new byte[] { 21, 22 }, new byte[] { 25, 26 }, new byte[] { 9, 1 }, 
		new byte[] { 1, 21 }, new byte[] { 25, 9 }, new byte[] { 9, 8 }, new byte[] { 1, 0 }, 
		new byte[] { 10, 2 }, new byte[] { 2, 22 }, new byte[] { 26, 10 }, new byte[] { 8, 10 }, 
		new byte[] { 0, 2 }, new byte[] { 32, 37 }, new byte[] { 37, 21 }, new byte[] { 0, 32 }, 
		new byte[] { 32, 38 }, new byte[] { 38, 22 }, new byte[] { 32, 32 }, new byte[] { 37, 38 }, 
		new byte[] { 33, 37 }, new byte[] { 1, 33 }, new byte[] { 33, 32 }, new byte[] { 34, 38 }, 
		new byte[] { 2, 34 }, new byte[] { 32, 34 }
	}, 
	new byte[][] { // lod 21 (10101)
		new byte[] { 34, 32 }, new byte[] { 32, 0 }, new byte[] { 0, 2 }, new byte[] { 2, 34 }, 
		new byte[] { 38, 37 }, new byte[] { 37, 21 }, new byte[] { 21, 22 }, new byte[] { 22, 38 }, 
		new byte[] { 34, 38 }, new byte[] { 32, 37 }, new byte[] { 0, 21 }, new byte[] { 2, 22 }, 
		new byte[] { 10, 8 }, new byte[] { 8, 25 }, new byte[] { 25, 26 }, new byte[] { 26, 10 }, 
		new byte[] { 10, 2 }, new byte[] { 8, 0 }, new byte[] { 25, 21 }, new byte[] { 26, 22 }, 
		new byte[] { 40, 41 }, new byte[] { 41, 25 }, new byte[] { 8, 40 }, new byte[] { 40, 32 }, 
		new byte[] { 41, 37 }
	}, 
	new byte[][] { // lod 22 (10110)
		new byte[] { 33, 1 }, new byte[] { 1, 0 }, new byte[] { 0, 32 }, new byte[] { 32, 33 }, 
		new byte[] { 37, 21 }, new byte[] { 21, 22 }, new byte[] { 22, 38 }, new byte[] { 38, 37 }, 
		new byte[] { 33, 37 }, new byte[] { 1, 21 }, new byte[] { 0, 22 }, new byte[] { 32, 38 }, 
		new byte[] { 40, 8 }, new byte[] { 8, 26 }, new byte[] { 26, 42 }, new byte[] { 42, 40 }, 
		new byte[] { 40, 32 }, new byte[] { 8, 0 }, new byte[] { 26, 22 }, new byte[] { 42, 38 }, 
		new byte[] { 9, 25 }, new byte[] { 25, 26 }, new byte[] { 8, 9 }, new byte[] { 9, 1 }, 
		new byte[] { 25, 21 }
	}, 
	new byte[][] { // lod 23 (10111)
	}, 
	new byte[][] { // lod 24 (11000)
		new byte[] { 32, 0 }, new byte[] { 0, 25 }, new byte[] { 25, 41 }, new byte[] { 41, 32 }, 
		new byte[] { 0, 26 }, new byte[] { 26, 42 }, new byte[] { 42, 32 }, new byte[] { 32, 32 }, 
		new byte[] { 0, 0 }, new byte[] { 25, 26 }, new byte[] { 41, 42 }, new byte[] { 33, 1 }, 
		new byte[] { 1, 25 }, new byte[] { 41, 33 }, new byte[] { 33, 32 }, new byte[] { 1, 0 }, 
		new byte[] { 34, 2 }, new byte[] { 2, 26 }, new byte[] { 42, 34 }, new byte[] { 32, 34 }, 
		new byte[] { 0, 2 }, new byte[] { 4, 21 }, new byte[] { 21, 25 }, new byte[] { 0, 4 }, 
		new byte[] { 4, 22 }, new byte[] { 22, 26 }, new byte[] { 4, 4 }, new byte[] { 21, 22 }, 
		new byte[] { 5, 21 }, new byte[] { 1, 5 }, new byte[] { 5, 4 }, new byte[] { 6, 22 }, 
		new byte[] { 2, 6 }, new byte[] { 4, 6 }
	}, 
	new byte[][] { // lod 25 (11001)
		new byte[] { 6, 4 }, new byte[] { 4, 0 }, new byte[] { 0, 2 }, new byte[] { 2, 6 }, 
		new byte[] { 22, 21 }, new byte[] { 21, 25 }, new byte[] { 25, 26 }, new byte[] { 26, 22 }, 
		new byte[] { 6, 22 }, new byte[] { 4, 21 }, new byte[] { 0, 25 }, new byte[] { 2, 26 }, 
		new byte[] { 34, 32 }, new byte[] { 32, 41 }, new byte[] { 41, 42 }, new byte[] { 42, 34 }, 
		new byte[] { 34, 2 }, new byte[] { 32, 0 }, new byte[] { 41, 25 }, new byte[] { 42, 26 }, 
		new byte[] { 36, 37 }, new byte[] { 37, 41 }, new byte[] { 32, 36 }, new byte[] { 36, 4 }, 
		new byte[] { 37, 21 }
	}, 
	new byte[][] { // lod 26 (11010)
		new byte[] { 36, 4 }, new byte[] { 4, 0 }, new byte[] { 0, 32 }, new byte[] { 32, 36 }, 
		new byte[] { 38, 22 }, new byte[] { 22, 26 }, new byte[] { 26, 42 }, new byte[] { 42, 38 }, 
		new byte[] { 36, 38 }, new byte[] { 4, 22 }, new byte[] { 0, 26 }, new byte[] { 32, 42 }, 
		new byte[] { 33, 1 }, new byte[] { 1, 25 }, new byte[] { 25, 41 }, new byte[] { 41, 33 }, 
		new byte[] { 33, 32 }, new byte[] { 1, 0 }, new byte[] { 25, 26 }, new byte[] { 41, 42 }, 
		new byte[] { 5, 21 }, new byte[] { 21, 25 }, new byte[] { 1, 5 }, new byte[] { 5, 4 }, 
		new byte[] { 21, 22 }
	}, 
	new byte[][] { // lod 27 (11011)
	}, 
	new byte[][] { // lod 28 (11100)
	}, 
	new byte[][] { // lod 29 (11101)
	}, 
	new byte[][] { // lod 30 (11110)
	}, 
	new byte[][] { // lod 31 (11111)
	}, 
	new byte[][] { // lod 32 (100000)
		new byte[] { 0, 41 }, new byte[] { 41, 41 }, new byte[] { 41, 8 }, new byte[] { 8, 0 }, 
		new byte[] { 1, 41 }, new byte[] { 41, 9 }, new byte[] { 9, 1 }, new byte[] { 0, 1 }, 
		new byte[] { 8, 9 }, new byte[] { 4, 37 }, new byte[] { 37, 37 }, new byte[] { 37, 0 }, 
		new byte[] { 0, 4 }, new byte[] { 5, 37 }, new byte[] { 37, 1 }, new byte[] { 1, 5 }, 
		new byte[] { 4, 5 }, new byte[] { 2, 42 }, new byte[] { 42, 42 }, new byte[] { 42, 10 }, 
		new byte[] { 10, 2 }, new byte[] { 0, 42 }, new byte[] { 42, 8 }, new byte[] { 2, 0 }, 
		new byte[] { 10, 8 }, new byte[] { 6, 38 }, new byte[] { 38, 38 }, new byte[] { 38, 2 }, 
		new byte[] { 2, 6 }, new byte[] { 4, 38 }, new byte[] { 38, 0 }, new byte[] { 6, 4 }, 
		new byte[] { 0, 0 }, new byte[] { 37, 41 }, new byte[] { 1, 1 }, new byte[] { 2, 2 }, 
		new byte[] { 38, 42 }, new byte[] { 4, 4 }, new byte[] { 38, 37 }, new byte[] { 42, 41 }, 
		new byte[] { 8, 8 }
	}, 
	new byte[][] { // lod 33 (100001)
		new byte[] { 16, 0 }, new byte[] { 0, 41 }, new byte[] { 41, 25 }, new byte[] { 25, 16 }, 
		new byte[] { 0, 37 }, new byte[] { 37, 21 }, new byte[] { 21, 16 }, new byte[] { 16, 16 }, 
		new byte[] { 0, 0 }, new byte[] { 41, 37 }, new byte[] { 25, 21 }, new byte[] { 24, 8 }, 
		new byte[] { 8, 41 }, new byte[] { 25, 24 }, new byte[] { 24, 16 }, new byte[] { 8, 0 }, 
		new byte[] { 20, 4 }, new byte[] { 4, 37 }, new byte[] { 21, 20 }, new byte[] { 16, 20 }, 
		new byte[] { 0, 4 }, new byte[] { 2, 42 }, new byte[] { 42, 41 }, new byte[] { 0, 2 }, 
		new byte[] { 2, 38 }, new byte[] { 38, 37 }, new byte[] { 2, 2 }, new byte[] { 42, 38 }, 
		new byte[] { 10, 42 }, new byte[] { 8, 10 }, new byte[] { 10, 2 }, new byte[] { 6, 38 }, 
		new byte[] { 4, 6 }, new byte[] { 2, 6 }
	}, 
	new byte[][] { // lod 34 (100010)
		new byte[] { 1, 0 }, new byte[] { 0, 42 }, new byte[] { 42, 41 }, new byte[] { 41, 1 }, 
		new byte[] { 0, 38 }, new byte[] { 38, 37 }, new byte[] { 37, 1 }, new byte[] { 1, 1 }, 
		new byte[] { 0, 0 }, new byte[] { 42, 38 }, new byte[] { 41, 37 }, new byte[] { 9, 8 }, 
		new byte[] { 8, 42 }, new byte[] { 41, 9 }, new byte[] { 9, 1 }, new byte[] { 8, 0 }, 
		new byte[] { 5, 4 }, new byte[] { 4, 38 }, new byte[] { 37, 5 }, new byte[] { 1, 5 }, 
		new byte[] { 0, 4 }, new byte[] { 16, 26 }, new byte[] { 26, 42 }, new byte[] { 0, 16 }, 
		new byte[] { 16, 22 }, new byte[] { 22, 38 }, new byte[] { 16, 16 }, new byte[] { 26, 22 }, 
		new byte[] { 24, 26 }, new byte[] { 8, 24 }, new byte[] { 24, 16 }, new byte[] { 20, 22 }, 
		new byte[] { 4, 20 }, new byte[] { 16, 20 }
	}, 
	new byte[][] { // lod 35 (100011)
	}, 
	new byte[][] { // lod 36 (100100)
		new byte[] { 8, 0 }, new byte[] { 0, 38 }, new byte[] { 38, 42 }, new byte[] { 42, 8 }, 
		new byte[] { 0, 37 }, new byte[] { 37, 41 }, new byte[] { 41, 8 }, new byte[] { 8, 8 }, 
		new byte[] { 0, 0 }, new byte[] { 38, 37 }, new byte[] { 42, 41 }, new byte[] { 10, 2 }, 
		new byte[] { 2, 38 }, new byte[] { 42, 10 }, new byte[] { 10, 8 }, new byte[] { 2, 0 }, 
		new byte[] { 9, 1 }, new byte[] { 1, 37 }, new byte[] { 41, 9 }, new byte[] { 8, 9 }, 
		new byte[] { 0, 1 }, new byte[] { 16, 22 }, new byte[] { 22, 38 }, new byte[] { 0, 16 }, 
		new byte[] { 16, 21 }, new byte[] { 21, 37 }, new byte[] { 16, 16 }, new byte[] { 22, 21 }, 
		new byte[] { 18, 22 }, new byte[] { 2, 18 }, new byte[] { 18, 16 }, new byte[] { 17, 21 }, 
		new byte[] { 1, 17 }, new byte[] { 16, 17 }
	}, 
	new byte[][] { // lod 37 (100101)
		new byte[] { 18, 2 }, new byte[] { 2, 0 }, new byte[] { 0, 16 }, new byte[] { 16, 18 }, 
		new byte[] { 22, 38 }, new byte[] { 38, 37 }, new byte[] { 37, 21 }, new byte[] { 21, 22 }, 
		new byte[] { 18, 22 }, new byte[] { 2, 38 }, new byte[] { 0, 37 }, new byte[] { 16, 21 }, 
		new byte[] { 24, 8 }, new byte[] { 8, 41 }, new byte[] { 41, 25 }, new byte[] { 25, 24 }, 
		new byte[] { 24, 16 }, new byte[] { 8, 0 }, new byte[] { 41, 37 }, new byte[] { 25, 21 }, 
		new byte[] { 10, 42 }, new byte[] { 42, 41 }, new byte[] { 8, 10 }, new byte[] { 10, 2 }, 
		new byte[] { 42, 38 }
	}, 
	new byte[][] { // lod 38 (100110)
		new byte[] { 17, 16 }, new byte[] { 16, 0 }, new byte[] { 0, 1 }, new byte[] { 1, 17 }, 
		new byte[] { 21, 22 }, new byte[] { 22, 38 }, new byte[] { 38, 37 }, new byte[] { 37, 21 }, 
		new byte[] { 17, 21 }, new byte[] { 16, 22 }, new byte[] { 0, 38 }, new byte[] { 1, 37 }, 
		new byte[] { 9, 8 }, new byte[] { 8, 42 }, new byte[] { 42, 41 }, new byte[] { 41, 9 }, 
		new byte[] { 9, 1 }, new byte[] { 8, 0 }, new byte[] { 42, 38 }, new byte[] { 41, 37 }, 
		new byte[] { 24, 26 }, new byte[] { 26, 42 }, new byte[] { 8, 24 }, new byte[] { 24, 16 }, 
		new byte[] { 26, 22 }
	}, 
	new byte[][] { // lod 39 (100111)
	}, 
	new byte[][] { // lod 40 (101000)
		new byte[] { 16, 0 }, new byte[] { 0, 42 }, new byte[] { 42, 26 }, new byte[] { 26, 16 }, 
		new byte[] { 0, 41 }, new byte[] { 41, 25 }, new byte[] { 25, 16 }, new byte[] { 16, 16 }, 
		new byte[] { 0, 0 }, new byte[] { 42, 41 }, new byte[] { 26, 25 }, new byte[] { 18, 2 }, 
		new byte[] { 2, 42 }, new byte[] { 26, 18 }, new byte[] { 18, 16 }, new byte[] { 2, 0 }, 
		new byte[] { 17, 1 }, new byte[] { 1, 41 }, new byte[] { 25, 17 }, new byte[] { 16, 17 }, 
		new byte[] { 0, 1 }, new byte[] { 4, 38 }, new byte[] { 38, 42 }, new byte[] { 0, 4 }, 
		new byte[] { 4, 37 }, new byte[] { 37, 41 }, new byte[] { 4, 4 }, new byte[] { 38, 37 }, 
		new byte[] { 6, 38 }, new byte[] { 2, 6 }, new byte[] { 6, 4 }, new byte[] { 5, 37 }, 
		new byte[] { 1, 5 }, new byte[] { 4, 5 }
	}, 
	new byte[][] { // lod 41 (101001)
		new byte[] { 20, 4 }, new byte[] { 4, 0 }, new byte[] { 0, 16 }, new byte[] { 16, 20 }, 
		new byte[] { 21, 37 }, new byte[] { 37, 41 }, new byte[] { 41, 25 }, new byte[] { 25, 21 }, 
		new byte[] { 20, 21 }, new byte[] { 4, 37 }, new byte[] { 0, 41 }, new byte[] { 16, 25 }, 
		new byte[] { 18, 2 }, new byte[] { 2, 42 }, new byte[] { 42, 26 }, new byte[] { 26, 18 }, 
		new byte[] { 18, 16 }, new byte[] { 2, 0 }, new byte[] { 42, 41 }, new byte[] { 26, 25 }, 
		new byte[] { 6, 38 }, new byte[] { 38, 42 }, new byte[] { 2, 6 }, new byte[] { 6, 4 }, 
		new byte[] { 38, 37 }
	}, 
	new byte[][] { // lod 42 (101010)
		new byte[] { 5, 4 }, new byte[] { 4, 0 }, new byte[] { 0, 1 }, new byte[] { 1, 5 }, 
		new byte[] { 37, 38 }, new byte[] { 38, 42 }, new byte[] { 42, 41 }, new byte[] { 41, 37 }, 
		new byte[] { 5, 37 }, new byte[] { 4, 38 }, new byte[] { 0, 42 }, new byte[] { 1, 41 }, 
		new byte[] { 17, 16 }, new byte[] { 16, 26 }, new byte[] { 26, 25 }, new byte[] { 25, 17 }, 
		new byte[] { 17, 1 }, new byte[] { 16, 0 }, new byte[] { 26, 42 }, new byte[] { 25, 41 }, 
		new byte[] { 20, 22 }, new byte[] { 22, 26 }, new byte[] { 16, 20 }, new byte[] { 20, 4 }, 
		new byte[] { 22, 38 }
	}, 
	new byte[][] { // lod 43 (101011)
	}, 
	new byte[][] { // lod 44 (101100)
	}, 
	new byte[][] { // lod 45 (101101)
	}, 
	new byte[][] { // lod 46 (101110)
	}, 
	new byte[][] { // lod 47 (101111)
	}, 
	new byte[][] { // lod 48 (110000)
	}, 
	new byte[][] { // lod 49 (110001)
	}, 
	new byte[][] { // lod 50 (110010)
	}, 
	new byte[][] { // lod 51 (110011)
	}, 
	new byte[][] { // lod 52 (110100)
	}, 
	new byte[][] { // lod 53 (110101)
	}, 
	new byte[][] { // lod 54 (110110)
	}, 
	new byte[][] { // lod 55 (110111)
	}, 
	new byte[][] { // lod 56 (111000)
	}, 
	new byte[][] { // lod 57 (111001)
	}, 
	new byte[][] { // lod 58 (111010)
	}, 
	new byte[][] { // lod 59 (111011)
	}, 
	new byte[][] { // lod 60 (111100)
	}, 
	new byte[][] { // lod 61 (111101)
	}, 
	new byte[][] { // lod 62 (111110)
	}, 
};

// dim0: lod  |  dim1:gridcell#  |  dim2: edge#
// result: edge id#
public static byte[][,] MCLodEdgeMappingTable = new byte[][,] {
	new byte[8,12] { // lod 0 (0)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 1, 15, 16, 17, 5, 9, 18, 19, 10 },
		{14, 20, 21, 22, 17, 23, 24, 25, 10, 19, 26, 27 },
		{2, 22, 28, 29, 6, 25, 30, 31, 11, 10, 27, 32 },
		{4, 5, 6, 7, 33, 34, 35, 36, 37, 38, 39, 40 },
		{15, 16, 17, 5, 41, 42, 43, 34, 38, 44, 45, 39 },
		{17, 23, 24, 25, 43, 46, 47, 48, 39, 45, 49, 50 },
		{6, 25, 30, 31, 35, 48, 51, 52, 40, 39, 50, 53 }
	},
	new byte[9,12] { // lod 1 (1)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[9,12] { // lod 2 (10)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[0,12] { // lod 3 (11)
	},
	new byte[9,12] { // lod 4 (100)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[6,12] { // lod 5 (101)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[6,12] { // lod 6 (110)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[0,12] { // lod 7 (111)
	},
	new byte[9,12] { // lod 8 (1000)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[6,12] { // lod 9 (1001)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[6,12] { // lod 10 (1010)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[0,12] { // lod 11 (1011)
	},
	new byte[0,12] { // lod 12 (1100)
	},
	new byte[0,12] { // lod 13 (1101)
	},
	new byte[0,12] { // lod 14 (1110)
	},
	new byte[0,12] { // lod 15 (1111)
	},
	new byte[9,12] { // lod 16 (10000)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[6,12] { // lod 17 (10001)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[6,12] { // lod 18 (10010)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[0,12] { // lod 19 (10011)
	},
	new byte[6,12] { // lod 20 (10100)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[3,12] { // lod 21 (10101)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[3,12] { // lod 22 (10110)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[0,12] { // lod 23 (10111)
	},
	new byte[6,12] { // lod 24 (11000)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[3,12] { // lod 25 (11001)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[3,12] { // lod 26 (11010)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[0,12] { // lod 27 (11011)
	},
	new byte[0,12] { // lod 28 (11100)
	},
	new byte[0,12] { // lod 29 (11101)
	},
	new byte[0,12] { // lod 30 (11110)
	},
	new byte[0,12] { // lod 31 (11111)
	},
	new byte[9,12] { // lod 32 (100000)
		{0, 1, 2, 3, 4, 1, 5, 6, 7, 1, 1, 8 },
		{9, 10, 11, 12, 13, 10, 14, 15, 16, 10, 10, 7 },
		{17, 18, 19, 20, 21, 18, 22, 3, 23, 18, 18, 24 },
		{25, 26, 27, 28, 29, 26, 30, 12, 31, 26, 26, 23 },
		{14, 11, 32, 7, 14, 33, 4, 34, 34, 10, 0, 7 },
		{30, 27, 35, 23, 30, 36, 21, 32, 32, 26, 17, 23 },
		{29, 26, 30, 12, 9, 10, 11, 12, 37, 38, 38, 32 },
		{21, 18, 22, 3, 0, 1, 2, 3, 32, 39, 39, 40 },
		{30, 36, 21, 32, 11, 33, 0, 32, 32, 38, 39, 32 }
	},
	new byte[6,12] { // lod 33 (100001)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[6,12] { // lod 34 (100010)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[0,12] { // lod 35 (100011)
	},
	new byte[6,12] { // lod 36 (100100)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[3,12] { // lod 37 (100101)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[3,12] { // lod 38 (100110)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[0,12] { // lod 39 (100111)
	},
	new byte[6,12] { // lod 40 (101000)
		{0, 1, 2, 3, 0, 4, 5, 6, 7, 8, 9, 10 },
		{11, 12, 2, 13, 0, 8, 0, 7, 14, 15, 1, 3 },
		{0, 8, 0, 7, 16, 17, 5, 18, 19, 20, 4, 6 },
		{21, 22, 1, 23, 24, 25, 4, 23, 26, 27, 9, 8 },
		{28, 22, 12, 29, 26, 23, 8, 23, 30, 21, 1, 15 },
		{26, 23, 8, 23, 31, 25, 17, 32, 33, 24, 4, 20 }
	},
	new byte[3,12] { // lod 41 (101001)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[3,12] { // lod 42 (101010)
		{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 },
		{12, 13, 14, 15, 2, 10, 6, 11, 16, 17, 18, 19 },
		{20, 21, 13, 22, 9, 5, 10, 1, 23, 24, 18, 17 }
	},
	new byte[0,12] { // lod 43 (101011)
	},
	new byte[0,12] { // lod 44 (101100)
	},
	new byte[0,12] { // lod 45 (101101)
	},
	new byte[0,12] { // lod 46 (101110)
	},
	new byte[0,12] { // lod 47 (101111)
	},
	new byte[0,12] { // lod 48 (110000)
	},
	new byte[0,12] { // lod 49 (110001)
	},
	new byte[0,12] { // lod 50 (110010)
	},
	new byte[0,12] { // lod 51 (110011)
	},
	new byte[0,12] { // lod 52 (110100)
	},
	new byte[0,12] { // lod 53 (110101)
	},
	new byte[0,12] { // lod 54 (110110)
	},
	new byte[0,12] { // lod 55 (110111)
	},
	new byte[0,12] { // lod 56 (111000)
	},
	new byte[0,12] { // lod 57 (111001)
	},
	new byte[0,12] { // lod 58 (111010)
	},
	new byte[0,12] { // lod 59 (111011)
	},
	new byte[0,12] { // lod 60 (111100)
	},
	new byte[0,12] { // lod 61 (111101)
	},
	new byte[0,12] { // lod 62 (111110)
	},
	new byte[0,12] { // lod 63 (111111)
	}
};

//dim0: lod   |  {edgeNum, reusableEdgeNumber}
public static byte[][,] MCLodEdgeToReID = new byte[][,] {
	new byte[,] {
		{3, 2}
	}
};

public static readonly int[,] edgePairs = {
   {0, 1}, {1, 2}, {2, 3}, {3, 0}, {4, 5}, {5, 6}, {6, 7}, {7, 4}, {0, 4}, {1, 5}, {2, 6}, {3, 7}
};
}
}
